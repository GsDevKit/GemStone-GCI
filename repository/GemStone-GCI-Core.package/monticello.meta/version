(name 'GemStone-GCI-Core-dkh.53' message 'add GsGciSession>>executeStringFetchBytes:resultBuffer: and tests' id '36093e2f-dbc6-4ad5-97ac-6dbf44142a17' date '15 June 2016' time '6:14:16.966615 am' author 'dkh' ancestors ((name 'GemStone-GCI-Core-dkh.52' message 'implement GsGciSession>>sendFetchBytes:to:withArgs: ... available in 3.2.x, 3.3.0 and 3.3.1+' id 'f722c06c-1402-4d6f-970d-daddca4fa77c' date '14 June 2016' time '8:30:36.385286 pm' author 'dkh' ancestors ((name 'GemStone-GCI-Core-dkh.51' message '31 run, 31 passes, 0 skipped, 0 expected failures, 0 failures, 0 errors, 0 unexpected passes; add NB variants for fetch bytes calls; option to supply the buffer and not just size (mainly for comppat with NB variants); a little bit of method name refactoring' id '47bb89ac-8862-4109-9064-048e2d2de81a' date '27 May 2016' time '11:22:04.204696 am' author 'dkh' ancestors ((name 'GemStone-GCI-Core-dkh.50' message '29 run, 28 passes, 0 skipped, 1 expected failures, 0 failures, 0 errors, 0 unexpected passes; implement session-based fetch bytes and tests ... ' id 'e6c67deb-d83b-4c2e-b883-91e0d4c0522c' date '26 May 2016' time '8:11:56.917141 pm' author 'dkh' ancestors ((name 'GemStone-GCI-Core-dkh.49' message '#3 fiddle GsGciSession>>bindToGciLibrary so that internal private build libraries can be used.' id 'df38e7e8-a06f-40c1-9a73-e8dbc932d3c7' date '26 May 2016' time '4:13:37.774614 pm' author 'dkh' ancestors ((name 'GemStone-GCI-Core-dkh.48' message 'add GciGemTrace() support, and get correct api for stepOver...' id '7a5dd028-cea0-465c-b3d6-970bf00cd99b' date '28 April 2016' time '12:45:16.086282 pm' author 'dkh' ancestors ((name 'GemStone-GCI-Core-dkh.47' message 'add GciStep() function ' id '7c4814c3-e08f-4779-b959-9ba08ee9bd31' date '27 April 2016' time '5:41:06.622675 pm' author 'dkh' ancestors ((name 'GemStone-GCI-Core-dkh.46' message 'final tweaks to get #logStack to work ' id '4221cc33-7ca6-4ef4-b20d-9db3d1fb6fbd' date '19 April 2016' time '8:50:34.066496 pm' author 'dkh' ancestors ((name 'GemStone-GCI-Core-dkh.45' message 'dalehenrich/tode#253 add slow for associating a clientObj with the session ... useful when intalling custom exception handlers; add notiion of defaultErrorExceptionClass, so that GciErr can be replaced; insulate tests against changes to standard exceptions' id '49320ea9-d686-41aa-8e0f-7cc57397f5f1' date '19 April 2016' time '5:14:32.591651 pm' author 'dkh' ancestors ((name 'GemStone-GCI-Core-dkh.44' message 'client forwarder work (for Pharo5.0) looks done' id '8b2da7e3-7ee7-4d8d-bb00-a698ec49baed' date '18 April 2016' time '7:51:58.581964 pm' author 'dkh' ancestors ((name 'GemStone-GCI-Core-dkh.43' message 'extend client forwarder tests cases ... got one sitting on a failure' id 'a17aaf5e-2f10-4708-9ee5-23d7c27df78e' date '18 April 2016' time '4:59:15.562763 pm' author 'dkh' ancestors ((name 'GemStone-GCI-Core-dkh.42' message 'checkpoint for client forwarder support ... message is getting sent on the client ... now working on getting continueWith: to be functional' id '5ea263c0-1d00-4fd1-a908-df39ddbc00ca' date '18 April 2016' time '2:57:24.456361 pm' author 'dkh' ancestors ((name 'GemStone-GCI-Core-dkh.41' message 'checkpoint ... client forwarder needs GCINBContinueWith: implemented; renamed export set methods to use PureExportSet to be crystal clear ' id '2f25952e-f19b-45d2-9192-90bf93f2e06a' date '18 April 2016' time '1:54:47.189474 pm' author 'dkh' ancestors ((name 'GemStone-GCI-Core-dkh.40' message 'gearing up to add client forwarder support to pollForNbResult:' id '195dbe08-7abb-40a1-b136-c476bc3b1bb1' date '18 April 2016' time '6:59:29.135708 am' author 'dkh' ancestors ((name 'GemStone-GCI-Core-dkh.39' message 'checkpoint for client forwarder work ... time to hook client forwarders into nbEnd loop ' id '9dcb1ad3-6fc6-43ac-a295-bd5e23e5e9e0' date '18 April 2016' time '6:42:36.771669 am' author 'dkh' ancestors ((name 'GemStone-GCI-Core-dkh.38' message 'add GsGciSession>>isObjectInExportSet:; straighten out session handling in the tests ...' id '10d239f7-23f6-4521-b8bc-8b56d2f253ea' date '17 April 2016' time '8:23:08.980012 pm' author 'dkh' ancestors ((name 'GemStone-GCI-Core-dkh.37' message 'flesh out pure export set support ... tests need work' id 'a13f8b68-adc8-42d6-8233-cb104510e835' date '17 April 2016' time '5:50:33.546593 pm' author 'dkh' ancestors ((name 'GemStone-GCI-Core-TravisCI.36' message 'Use FileSystem api; factor out GsDevKitSession sessionDescription access for testing; tests are green when using GsDevKitSession (default ssession name)' id '04bd55f8-d850-4e08-9543-a0cdfe468c2f' date '6 April 2016' time '11:02:42.766901 am' author 'TravisCI' ancestors ((name 'GemStone-GCI-Core-dkh.35' message 'hooking up to GsDevKIt_home' id '81a8a7ce-3ef2-4792-baf8-e1ede1edee59' date '6 April 2016' time '8:44:49.977929 am' author 'dkh' ancestors ((name 'GemStone-GCI-Core-TravisCI.34' message 'merged by GitFileTree-MergeDriver' id 'e9459748-598c-41ba-842b-77ddf4804a9a' date '5 April 2016' time '3:45:48.773851 pm' author 'TravisCI' ancestors ((name 'GemStone-GCI-Core-TravisCI.25' message 'ported Mariano''s common class changes for Pharo5.0 to the pharo3.0/pharo4.0 version' id '91d947d0-9a1c-4dce-b0a7-48e62cb21dfb' date '5 April 2016' time '2:17:58.428129 pm' author 'TravisCI' ancestors ((name 'GemStone-GCI-Core-dkh.24' message 'finish the renaming job ...' id 'd286f679-fdc0-4192-9658-9a78e5591ec0' date '29 March 2016' time '3:06:20.685621 pm' author 'dkh' ancestors ((name 'GemStone-GCI-Core-dkh.23' message 'checkpoint starting work in Tugrik functionality ... looks like I''ve found the right place to splice in the GemStone db -- TugrikCursor will be making GCI calls instead of writing commands to a stream --' id '28d4dde0-37c5-4f24-9e4b-0aaa390a056b' date '4 March 2016' time '3:23:43.232028 pm' author 'dkh' ancestors ((name 'GemStone-GCI-Core-dkh.22' message 'rename GsOopType to GsGciOopType and clean up some method names' id 'b7fa0e64-00e4-41eb-9e11-91ea533fa1cc' date '4 March 2016' time '10:03:12.510026 am' author 'dkh' ancestors ((name 'GemStone-GCI-Core-dkh.21' message 'move Tugrik session, exception, and extensions to GemStone-GCI packages as so for everyting is pretty generic and not Tugrix specific' id '64d2d496-2fa6-4a55-8b73-5076cdc20611' date '4 March 2016' time '9:41:17.999495 am' author 'dkh' ancestors ((name 'GemStone-GCI-Core-dkh.20' message 'Choosing GsGci prefix for classes to avoid collisions with tODE and and GemTools GCI class names' id '3c52c664-03ae-48a0-b273-561179c2e017' date '4 March 2016' time '9:19:36.165924 am' author 'dkh' ancestors ((name 'GemStone-GCI-Core-dkh.19' message 'move the threadsafe classes to the GemStone-GCI-ThreadSafe-Core package' id '41cd455b-e1b4-4529-b319-53c642e947cb' date '4 March 2016' time '9:12:19.357152 am' author 'dkh' ancestors ((name 'GemStone-GCI-Core-dkh.18' message 'start working with TugrikGciSession>>send:to:withArgs:' id 'bf28c574-f894-4923-be65-afe57c18a770' date '3 March 2016' time '4:25:39.811114 pm' author 'dkh' ancestors ((name 'GemStone-GCI-Core-dkh.17' message 'GciPerformNoDebug_ is now functional' id '4e38d1b9-3632-4c7c-9f61-f5631871a83d' date '3 March 2016' time '10:27:54.787748 am' author 'dkh' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'GemStone-GCI-Core-TravisCI.33' message 'move the pharo 5.x specific classes and code into GemStone-GCI-Pharo5x-Core ' id '1ce4fb64-cc78-431c-b3aa-e47b0e8554f3' date '5 April 2016' time '3:42:05.151718 pm' author 'TravisCI' ancestors ((name 'GemStone-GCI-Core-MarianoMartinezPeck.32' message '* Replace "GsGci32xErrSType new." with "GsGci32xErrSType externalNew autoRelease." for autorelease.
' id '65eefa13-ea73-4698-9a2b-f4c039695ca3' date '31 March 2016' time '4:14:12.740378 pm' author 'MarianoMartinezPeck' ancestors ((name 'GemStone-GCI-Core-MarianoMartinezPeck.31' message 'IMPORTANT: THIS COMMIT MAKES ALL TESTS GREEN :)

* GsGciOopType is not handled as a ExternalStructure anymore. That was a hack (but I assume previouslt there was no other way of doing that). Now, GsGciOopType is a subclass of FFIConstantHandle and implements class side #asExternalTypeOn: which specifies a new class FFIGemstone64HandleType.
* FFIGemstone64HandleType is a new subclass of FFIConstantHandleType with the only difference that it''s handler is a uint64 instead of a 32bits. 
* With the new changes to GsGciOopType we have to be careful as the answers from the API is now always an instance of GsGciOopType and NOT the internal integer as it used to be. That means, that in a couple of places we have to send #asInteger to GsGciOopType to get the internal uint64. 
' id '60ad378d-451a-4295-9924-32449b314377' date '31 March 2016' time '3:31:00.319135 pm' author 'MarianoMartinezPeck' ancestors ((name 'GemStone-GCI-Core-MarianoMartinezPeck.30' message 'Continue advancing on making it work. At least now the login should work' id '36f2ac6a-3da7-4843-be9a-ece4d55fdb68' date '31 March 2016' time '9:35:02.020712 am' author 'MarianoMartinezPeck' ancestors ((name 'GemStone-GCI-Core-MarianoMartinezPeck.29' message 'Added small sanity test ' id '4c7896c5-a8dc-48c1-9324-a47a5cef1702' date '30 March 2016' time '3:50:19.940396 pm' author 'MarianoMartinezPeck' ancestors ((name 'GemStone-GCI-Core-MarianoMartinezPeck.27' message 'Move ALL api methods from apicall: to the new #ffiCall:' id 'eea251c3-ee9e-4627-8759-d199a06e9d54' date '30 March 2016' time '11:48:26.304945 am' author 'MarianoMartinezPeck' ancestors ((name 'GemStone-GCI-Core-MarianoMartinezPeck.26' message 'Remove the last override' id '70af32e2-64c9-4918-8f1f-c5f74610fa98' date '30 March 2016' time '10:51:38.790837 am' author 'MarianoMartinezPeck' ancestors ((name 'GemStone-GCI-Core-MarianoMartinezPeck.25' message '* Remove references to Tugri and rename to general GCI
* Remove (with previous checking) unnecessary GemStone overrides in FFI' id 'd9c78809-60ee-479e-88aa-6a79d525f100' date '29 March 2016' time '10:26:35.897391 pm' author 'MarianoMartinezPeck' ancestors ((id 'd286f679-fdc0-4192-9658-9a78e5591ec0')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())